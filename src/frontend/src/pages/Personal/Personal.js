import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './Personal.css';
import deliveryImg from '../../assets/delivery.webp';
import movingImg from '../../assets/moving.webp';

const vehicleData = {
  bike: {
    name: 'Xe m√°y',
    specs: {
      'Tr·ªçng t·∫£i': '25 kg',
      'K√≠ch c·ª° h√†ng h√≥a t·ªëi ƒëa': '42cm x 28cm x 28cm',
      'Ph√π h·ª£p cho': 'Giao ƒë·ªì ƒÉn tr·ª±c tuy·∫øn, ƒë·ªì nh·ªè, th·ª±c ph·∫©m, t√†i li·ªáu',
      'L∆∞u √Ω': 'Ph√≠ ƒëi·ªÉm d·ª´ng ƒë∆∞·ª£c t√≠nh theo t·ª´ng ƒëi·ªÉm v√† c√≥ th·ªÉ kh√°c nhau'
    }
  },
  van500: {
    name: 'Xe t·∫£i 500kg',
    specs: {
      'Tr·ªçng t·∫£i': '500 kg',
      'K√≠ch c·ª° h√†ng h√≥a t·ªëi ƒëa': '150cm x 100cm x 100cm',
      'Ph√π h·ª£p cho': 'H√†ng h√≥a v·ª´a, th·ª±c ph·∫©m, ƒë·ªì gia d·ª•ng'
    }
  },
  truck1: {
    name: 'Xe t·∫£i 1 t·∫•n',
    specs: {
      'Tr·ªçng t·∫£i': '1000 kg',
      'K√≠ch c·ª° h√†ng h√≥a t·ªëi ƒëa': '280cm x 160cm x 160cm',
      'Ph√π h·ª£p cho': 'H√†ng h√≥a l·ªõn, n·ªôi th·∫•t, thi·∫øt b·ªã'
    }
  },
  truck15: {
    name: 'Xe t·∫£i 1.5 t·∫•n',
    specs: {
      'Tr·ªçng t·∫£i': '1500 kg',
      'K√≠ch c·ª° h√†ng h√≥a t·ªëi ƒëa': '300cm x 160cm x 160cm',
      'Ph√π h·ª£p cho': 'H√†ng h√≥a c·ªìng k·ªÅnh, v·∫≠t li·ªáu x√¢y d·ª±ng'
    }
  },
  truck2: {
    name: 'Xe t·∫£i 2 t·∫•n',
    specs: {
      'Tr·ªçng t·∫£i': '2000 kg',
      'K√≠ch c·ª° h√†ng h√≥a t·ªëi ƒëa': '320cm x 180cm x 180cm',
      'Ph√π h·ª£p cho': 'H√†ng h√≥a n·∫∑ng, container nh·ªè'
    }
  },
  truck25: {
    name: 'Xe t·∫£i 2.5 t·∫•n',
    specs: {
      'Tr·ªçng t·∫£i': '2500 kg',
      'K√≠ch c·ª° h√†ng h√≥a t·ªëi ƒëa': '350cm x 180cm x 180cm',
      'Ph√π h·ª£p cho': 'H√†ng h√≥a si√™u n·∫∑ng, v·∫≠n chuy·ªÉn c√¥ng nghi·ªáp'
    }
  }
};

function Personal() {
  const [selectedVehicle, setSelectedVehicle] = useState(null);
  const [selectedService, setSelectedService] = useState(null);
  const navigate = useNavigate();

  const deliveryFeatures = [
    {
      icon: "üöö",
      title: "ƒê·∫øn s√°ng ng√†y khi b·∫°n c·∫ßn",
      description: "D·ªãch v·ª• xe ƒëang c√≥ s·∫µn ƒë·ªÉ giao g·ª≠i ngay t·∫°i ƒë·ªãa ph∆∞∆°ng, c√≥ th·ªÉ s·ª≠ d·ª•ng ƒë·ªÉ giao h√†ng trong ng√†y ho·∫∑c giao ngay l·∫≠p t·ª©c."
    },
    {
      icon: "üì¶",
      title: "ƒê·ªôi ng≈© t√†i x·∫ø chuy√™n nghi·ªáp",
      description: "C√°c t√†i x·∫ø ƒë∆∞·ª£c tuy·ªÉn ch·ªçn k·ªπ c√†ng v√† ƒë√†o t·∫°o chuy√™n nghi·ªáp ƒë·ªÉ ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng."  // Added missing closing quote and period
    },
    {
      icon: "üì±",
      title: "Ti·ªán ki·ªán theo d√µi v√† c·∫≠p nh·∫≠t",
      description: "Theo d√µi ƒë∆°n h√†ng tr·ª±c tuy·∫øn, c·∫≠p nh·∫≠t tr·∫°ng th√°i theo th·ªùi gian th·ª±c."
    },
    {
      icon: "üí∞",
      title: "Gi√° c·∫£ c·∫°nh tranh",
      description: "M·ª©c gi√° ph√π h·ª£p v·ªõi ch·∫•t l∆∞·ª£ng d·ªãch v·ª• v√† cam k·∫øt kh√¥ng ph√°t sinh chi ph√≠."
    }
  ];

  const whyChooseFeatures = [
    {
      icon: "üöó",
      title: "ƒê·∫øn s√°ng ng√†y khi b·∫°n c·∫ßn",
      description: "D·ªãch v·ª• xe ƒëang c√≥ s·∫µn ƒë·ªÉ giao g·ª≠i ngay t·∫°i ƒë·ªãa ph∆∞∆°ng, c√≥ th·ªÉ s·ª≠ d·ª•ng ƒë·ªÉ giao h√†ng trong ng√†y."
    },
    {
      icon: "üë•",
      title: "ƒê·ªôi ng≈© t√†i x·∫ø chuy√™n nghi·ªáp",
      description: "C√°c t√†i x·∫ø ƒë∆∞·ª£c tuy·ªÉn ch·ªçn k·ªπ c√†ng v√† ƒë√†o t·∫°o chuy√™n nghi·ªáp ƒë·ªÉ ƒë·∫£m b·∫£o d·ªãch v·ª• t·ªët nh·∫•t."
    },
    {
      icon: "‚ú®",
      title: "Ti·ªán ki·ªán theo d√µi v√† c·∫≠p nh·∫≠t",
      description: "Theo d√µi ƒë∆°n h√†ng tr·ª±c tuy·∫øn, c·∫≠p nh·∫≠t tr·∫°ng th√°i theo th·ªùi gian th·ª±c."
    },
    {
      icon: "üí∞",
      title: "Gi√° c·∫£ c·∫°nh tranh",
      description: "M·ª©c gi√° ph√π h·ª£p v·ªõi ch·∫•t l∆∞·ª£ng d·ªãch v·ª• v√† cam k·∫øt kh√¥ng ph√°t sinh chi ph√≠."
    }
  ];

  const services = [
    {
      title: "H√†ng nh·ªè",
      icon: "üì¶"
    },
    {
      title: "H√†ng l·ªõn v√† c√¥ng k·ªÅnh",
      icon: "üöõ"
    },
    {
      title: "H√†ng c√≥ gi√° tr·ªã ho·∫∑c d·ªÖ v·ª°",
      icon: "üíé"
    },
    {
      title: "Khi c·∫ßn chuy·ªÉn nh√†, vƒÉn ph√≤ng",
      icon: "üè†"
    },
    {
      title: "Giao ƒë·ªì ƒÉn v√† c√°c th·ª±c ph·∫©m kh√°c",
      icon: "üçΩÔ∏è"
    }
  ];

  const serviceDetails = {
    "H√†ng nh·ªè": {
      description: "T√†i li·ªáu v√† h√†ng h√≥a nh·ªè g·ªçn nh·∫π, d·ªÖ c·∫ßm n·∫Øm khi di chuy·ªÉn v√† v·∫≠n chuy·ªÉn.",
    },
    "H√†ng l·ªõn v√† c√¥ng k·ªÅnh": {
      description: "V·∫≠n chuy·ªÉn ƒë·ªì n·ªôi th·∫•t, thi·∫øt b·ªã l·ªõn v√† c√°c lo·∫°i h√†ng h√≥a c·ªìng k·ªÅnh kh√°c.",
    },
    "H√†ng c√≥ gi√° tr·ªã ho·∫∑c d·ªÖ v·ª°": {
      description: "ƒê·∫£m b·∫£o an to√†n cho c√°c m·∫∑t h√†ng d·ªÖ v·ª° v√† c√≥ gi√° tr·ªã cao trong qu√° tr√¨nh v·∫≠n chuy·ªÉn.",
    },
    "Khi c·∫ßn chuy·ªÉn nh√†, vƒÉn ph√≤ng": {
      description: "D·ªãch v·ª• chuy·ªÉn nh√† tr·ªçn g√≥i, an to√†n v√† chuy√™n nghi·ªáp.",
    },
    "Giao ƒë·ªì ƒÉn v√† c√°c th·ª±c ph·∫©m kh√°c": {
      description: "Giao ƒë·ªì ƒÉn nhanh ch√≥ng, ƒë·∫£m b·∫£o nhi·ªát ƒë·ªô v√† ch·∫•t l∆∞·ª£ng.",
    }
  };

  const handleVehicleClick = (key) => {
    if (selectedVehicle === key) {
      setSelectedVehicle(null);
    } else {
      setSelectedVehicle(key);
    }
  };

  return (
    <div className="landing-container">
      {/* Hero Section */}
      <div className="hero">
        <div className="hero-content">
          <div className="hero-logo">
            
          </div>
          <h1>Giao h√†ng theo m·ªçi nhu c·∫ßu</h1>
          <p>ƒê·ªì h√†ng nh·ªè hay h√†ng to c·ªìng k·ªÅnh, b·∫°n ƒë·ªÅu d·ªÖ d√†ng ƒë·∫∑t ƒë∆°n giao h√†ng nhanh ch√≥ng t·ªõi k·∫øt n·ªëi v·ªõi t√†i x·∫ø g·∫ßn nh·∫•t.</p>
          <button className="order-btn">ƒê·∫∑t giao ngay</button>
        </div>
      </div>

      {/* Why Choose Section */}
      <section className="why-choose-section">
        <div className="content-wrapper">
          <h2>T·∫°i sao n√™n l·ª±a ch·ªçn Lalago?</h2>
          <h3>ƒê·ªëi t√°c giao h√†ng tin c·∫≠y c·ªßa b·∫°n</h3>
          <div className="features-grid">
            <div className="features-image">
              <img src={deliveryImg} alt="Delivery Partner" />
            </div>
            <div className="features-content">
              <div className="feature-item">
                <div className="icon-wrapper">üë§</div>
                <div className="text-wrapper">
                  <h4>ƒê·∫øn s√°ng ng√†y khi b·∫°n c·∫ßn</h4>
                  <p>D·ªãch v·ª• xe ƒëang c√≥ s·∫µn ƒë·ªÉ giao g·ª≠i ngay t·∫°i ƒë·ªãa ph∆∞∆°ng</p>
                </div>
              </div>
              <div className="feature-item">
                <div className="icon-wrapper">üöö</div>
                <div className="text-wrapper">
                  <h4>ƒê·ªôi ng≈© t√†i x·∫ø chuy√™n nghi·ªáp</h4>
                  <p>C√°c t√†i x·∫ø ƒë∆∞·ª£c tuy·ªÉn ch·ªçn k·ªπ c√†ng v√† ƒë√†o t·∫°o chuy√™n nghi·ªáp</p>
                </div>
              </div>
              <div className="feature-item">
                <div className="icon-wrapper">üì±</div>
                <div className="text-wrapper">
                  <h4>Ti·ªán ki·ªán theo d√µi v√† c·∫≠p nh·∫≠t</h4>
                  <p>Theo d√µi ƒë∆°n h√†ng tr·ª±c tuy·∫øn v√† c·∫≠p nh·∫≠t tr·∫°ng th√°i</p>
                </div>
              </div>
              <div className="feature-item">
                <div className="icon-wrapper">üí∞</div>
                <div className="text-wrapper">
                  <h4>Gi√° c·∫£ c·∫°nh tranh</h4>
                  <p>M·ª©c gi√° ph√π h·ª£p v·ªõi ch·∫•t l∆∞·ª£ng d·ªãch v·ª•</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      <div className="main-content-wrapper">
        {/* Moving Service Section */}
        <div className="moving-service">
          <div className="content-wrapper">
            <div className="moving-content">
              <h2>Chuy·ªÉn nh√† d·ªÖ d√†ng c√πng Lalago</h2>
              <ul>
                <li>ƒêƒÉng k√Ω l·ªãch l√°i xe trong b·∫•t k·ª≥ ƒë·ªëi t∆∞·ª£ng ph∆∞∆°ng ti·ªán tr·ªçn g√≥i c·ªßa ch√∫ng t√¥i</li>
                <li>Gi·∫£m thi·ªÉu th·ªùi gian ch·ªù v·ªõi d·ªãch v·ª• giao h√†ng nhanh ch√≥ng</li>
                <li>Gi√° c·∫£ ph·∫£i chƒÉng v√† minh b·∫°ch cho m·ªçi d·ªãch v·ª•</li>
              </ul>
              <button className="learn-more">T√¨m hi·ªÉu ngay t·∫°i ƒë√¢y</button>
            </div>
            <div className="moving-image">
              <img src={movingImg} alt="Moving Service" />
            </div>
          </div>
        </div>
      </div>

      {/* Vehicle Types Section */}
      <div className="vehicle-section">
        <h2>Ph∆∞∆°ng ti·ªán v·∫≠n chuy·ªÉn ph√π h·ª£p v·ªõi m·ª©c gi√° t·ªët nh·∫•t</h2>
        <div className="vehicle-grid">
          {Object.entries(vehicleData).map(([key, vehicle]) => (
            <div 
              key={key} 
              className={`vehicle-type ${selectedVehicle === key ? 'selected' : ''}`}
              onClick={() => handleVehicleClick(key)}
            >
              <p>{vehicle.name}</p>
            </div>
          ))}
        </div>

        {selectedVehicle && (
          <div className="vehicle-details">
            <h3>{vehicleData[selectedVehicle].name}</h3>
            <div className="specs">
              {Object.entries(vehicleData[selectedVehicle].specs).map(([key, value]) => (
                <div key={key} className="spec-item">
                  <strong>{key}:</strong>
                  <span>{value}</span>
                </div>
              ))}
            </div>
          </div>
        )}
      </div>

      <section className="delivery-features">
        <h2>T·∫°i sao n√™n l·ª±a ch·ªçn Lalago?</h2>
        <h3>ƒê·ªëi t√°c giao h√†ng tin c·∫≠y c·ªßa b·∫°n</h3>
        <div className="features-container">
          <div className="feature-box">
            <div className="feature-icon">üöö</div>
            <h3 className="feature-title">ƒê·∫øn s√°ng ng√†y khi b·∫°n c·∫ßn</h3>
            <p className="feature-description">
              D·ªãch v·ª• xe ƒëang c√≥ s·∫µn ƒë·ªÉ giao g·ª≠i ngay t·∫°i ƒë·ªãa ph∆∞∆°ng, c√≥ th·ªÉ s·ª≠ d·ª•ng ƒë·ªÉ giao h√†ng trong ng√†y ho·∫∑c giao ngay l·∫≠p t·ª©c.
            </p>
          </div>

          <div className="feature-box">
            <div className="feature-icon">üë•</div>
           
            <p className="feature-description">
              C√°c t√†i x·∫ø ƒë∆∞·ª£c tuy·ªÉn ch·ªçn k·ªπ c√†ng v√† ƒë√†o t·∫°o chuy√™n nghi·ªáp ƒë·ªÉ ƒë·∫£m b·∫£o d·ªãch v·ª• t·ªët nh·∫•t.
            </p>
          </div>

          <div className="feature-box">
            <div className="feature-icon">üì±</div>
           
            <p className="feature-description">
              Theo d√µi ƒë∆°n h√†ng tr·ª±c tuy·∫øn, c·∫≠p nh·∫≠t tr·∫°ng th√°i theo th·ªùi gian th·ª±c.
            </p>
          </div>

          <div className="feature-box">
            <div className="feature-icon">üí∞</div>
            
            <p className="feature-description">
              M·ª©c gi√° ph√π h·ª£p v·ªõi ch·∫•t l∆∞·ª£ng d·ªãch v·ª• v√† cam k·∫øt kh√¥ng ph√°t sinh chi ph√≠.
            </p>
          </div>
        </div>
      </section>

      <section className="services-section">
        <h2>D·ªãch v·ª• c·ªßa ch√∫ng t√¥i</h2>
        <div className="services-grid">
          {services.map((service, index) => (
            <div key={index} className="service-wrapper">
              <div 
                className={`service-card ${selectedService === service.title ? 'active' : ''}`}
                onClick={() => setSelectedService(selectedService === service.title ? null : service.title)}
              >
                <div className="service-title">{service.title}</div>
                <div className="service-dot">‚Ä¢</div>
              </div>
              {selectedService === service.title && (
                <div className="service-details">
                  <p>{serviceDetails[service.title].description}</p>
                </div>
              )}
            </div>
          ))}
        </div>
        <button className="service-button">T√¨m hi·ªÉu ngay</button>
      </section>

      
    </div>
  );
}

export default Personal;